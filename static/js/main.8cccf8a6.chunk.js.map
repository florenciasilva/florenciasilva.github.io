{"version":3,"sources":["assets/rainbow.png","assets/md-links.png","assets/reactibook.PNG","assets/memoire.PNG","assets/rainbow-flare.png","Components/Social.js","Components/About.js","assets/index.js","Components/Projects.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Icon","styled","i","Wrapper","article","Social","href","aria-label","target","rel","className","Container","section","Description","Intro","h1","Subtitle","p","Tags","Image","img","About","src","Flare","alt","MDLinks","Reactibook","Memoire","Title","Type","Projects","ProjectData","projects","map","project","key","title","tabIndex","images","thumbnail","date","type","tags","github","label","demo","Footer","footer","Rainbow","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cccf8a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rainbow.b03355a4.png\";","module.exports = __webpack_public_path__ + \"static/media/md-links.d3e1e38f.png\";","module.exports = __webpack_public_path__ + \"static/media/reactibook.3039edfe.PNG\";","module.exports = __webpack_public_path__ + \"static/media/memoire.da067c04.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rainbow-flare.e455dfb6.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Social = () => {\r\n    return (\r\n        <Wrapper>\r\n            <a href=\"https://github.com/florenciasilva\" aria-label=\"Find me on github\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Icon className=\"fab fa-github\" />\r\n            </a>\r\n            <a href=\"https://twitter.com/hensgrej\" aria-label=\"Follow me on Twitter\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Icon className=\"fab fa-twitter-square\" />\r\n            </a>\r\n            <a href=\"https://linkedin.com/in/florenciasilvaolivera\" aria-label=\"Add me to your Linkedin network\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Icon className=\"fab fa-linkedin\" />\r\n            </a>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst Icon = styled.i`\r\n    font-size: 3rem;\r\n    margin-top: 2vw;\r\n    color: palevioletred;\r\n    margin: 0 1rem 0 0;\r\n`\r\nconst Wrapper = styled.article `\r\n    @media only screen and (max-width: 480px) {\r\n        display: flex;\r\n        flex-direction: row;\r\n        margin-top: .5rem;\r\n    }\r\n`\r\n\r\nexport default Social;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Flare from '../assets/rainbow.png'\r\nimport Social from './Social';\r\n\r\nconst About = () => {\r\n    return (\r\n        <Container>\r\n            <Description>\r\n                <Intro>Florencia Silva</Intro>\r\n            <Wrapper>\r\n                <Subtitle>Front End Developer</Subtitle>\r\n                <Tags>laboratorian  agile  self-taught</Tags>\r\n                <Social />\r\n            </Wrapper>\r\n            </Description>\r\n            <Image src={Flare} alt=\"Rainbow lens flare\" />\r\n        </Container>\r\n        );\r\n};\r\n\r\nconst Container = styled.section `\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 80vw;\r\n    margin-top: 5vh;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`\r\n\r\nconst Description = styled.article `\r\n    flex-direction: column;\r\n`\r\n\r\nconst Intro = styled.h1`\r\n    width: 36vw;\r\n    color: palevioletred;\r\n    font-size: 4rem;\r\n    margin: 0;\r\n    font-family: 'Roboto Mono', monospace;\r\n    @media only screen and (max-width: 480px) {\r\n        font-size: 3rem;\r\n    }\r\n`\r\n\r\nconst Wrapper = styled.article `\r\n    width: 30vw;\r\n`\r\n\r\nconst Subtitle = styled.p`\r\n    width: 35vw;\r\n    color: black;\r\n    font-size: 2.2rem;\r\n    margin: 0;\r\n    font-family: 'Roboto Mono', monospace;\r\n    @media only screen and (max-width: 480px) {\r\n        font-size: 2rem;\r\n    }\r\n`\r\n\r\nconst Tags = styled.p`\r\n    font-family: 'Roboto Mono', monospace;\r\n    font-size: 1.2rem;\r\n    margin-top: -.2rem;\r\n    margin-bottom: .2rem;\r\n    @media only screen and (max-width: 480px) {\r\n        font-size: 1rem;\r\n    }\r\n`\r\nconst Image = styled.img `\r\n    width: 100%;\r\n    height: auto;\r\n    max-width: 30vw;\r\n`\r\nexport default About;","import MDLinks from './md-links.png';\r\nimport Reactibook from './reactibook.PNG';\r\nimport Memoire from './memoire.PNG';\r\n\r\nexport default {\r\n    MDLinks,\r\n    Reactibook,\r\n    Memoire\r\n};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProjectData from '../projects.json';\r\nimport images from '../assets';\r\nimport VisuallyHidden from \"@reach/visually-hidden\";\r\n\r\nconst Projects = () => {\r\n    return ProjectData.projects.map((project, i) => {\r\n        return (\r\n            <Container key={i}>\r\n                    <Title>{project.title}</Title>\r\n                    <Image tabIndex=\"-1\" src={images[project.thumbnail]} className=\"project-img\" alt={project.title}/>\r\n                    <VisuallyHidden>This project was made on</VisuallyHidden>\r\n                    <p>{project.date}</p>\r\n                    <VisuallyHidden>and it is a</VisuallyHidden>\r\n                    <Type>{project.type}.</Type>\r\n                    <VisuallyHidden>Technologies used for this project</VisuallyHidden>\r\n                    <Tags>{project.tags}</Tags>\r\n                    <Wrapper>\r\n                        <a href={project.github} aria-label={project.label[0]} target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\r\n                        <a href={project.demo} aria-label={project.label[1]} target=\"_blank\" rel=\"noopener noreferrer\">Demo</a>\r\n                    </Wrapper>\r\n            </Container>\r\n        );\r\n    });\r\n};\r\n\r\nconst Container = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n    margin: 2% 2% 0 0\r\n    width: 30vw;\r\n    font-family: 'Roboto Mono', monospace;\r\n`\r\nconst Title = styled.h1`\r\n    margin-left: -2%;\r\n`\r\nconst Image = styled.img`\r\n    height: 35vh;\r\n    object-fit: cover;\r\n`\r\n\r\nconst Tags = styled.p`\r\n    width: 30vw;\r\n    text-align: center;\r\n`\r\n\r\nconst Wrapper = styled.article`\r\n& a {\r\n    font-size: 1.2rem;\r\n    text-decoration: none;\r\n    margin-left: 1rem;\r\n    text-decoration: underline;\r\n    color: black;\r\n    }\r\n    `\r\n\r\nconst Type = styled.p`\r\n    margin-top: -1rem;\r\n`\r\nexport default Projects;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Rainbow from '../assets/rainbow-flare.png';\r\nimport Social from './Social';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <Footer>\r\n            <Title>let's get in touch</Title>\r\n            <Wrapper>\r\n                <Social />\r\n                <a href=\"mailto:hensgrej@gmail.com\"  aria-label=\"Send me an email!\"><Icon className=\"fas fa-envelope-square\"></Icon></a>\r\n            </Wrapper>\r\n        </Footer>\r\n    );\r\n};\r\n\r\nconst Footer = styled.footer`\r\n    height: 35vh;\r\n    width: 90vw;\r\n    background-image: url(${Rainbow});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    box-shadow: 0 0 10px 10px #fcfcfa inset;\r\n    transform: scaleX(-1);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: 'Roboto Monospace', monospace;\r\n    margin-top: 2rem;\r\n    flex-direction: column;\r\n    `;\r\n\r\nconst Title = styled.h1 `\r\n    transform: scaleX(-1);\r\n    font-weight: 300;\r\n    filter: opacity(80%)\r\n`\r\nconst Wrapper = styled.section`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform: scaleX(-1);\r\n`\r\n\r\nconst Icon = styled.i`\r\n    font-size: 3rem;\r\n    color: palevioletred;\r\n    margin: 0 1rem 0 0;\r\n    @media only screen and (max-width: 480px) {\r\n        margin: .5rem 1rem 0 0;\r\n\r\n    }\r\n\r\n`\r\n\r\nexport default Contact;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\nimport About from './Components/About';\r\nimport Projects from './Components/Projects';\r\nimport Contact from './Components/Contact';\r\nimport { SkipNavLink, SkipNavContent } from '@reach/skip-nav'\r\n\r\nconst App = () => {\r\n  return (\r\n    <main>\r\n      <SkipNavLink tabIndex=\"0\"> Skip to projects </SkipNavLink>\r\n        <About />\r\n      <SkipNavContent />\r\n      <Wrapper>\r\n        <Projects />\r\n      </Wrapper>\r\n      <Contact />\r\n    </main>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  display: flex;\r\n  @media only screen and (max-width: 480px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  @media only screen and (max-width: 1024px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n`\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    const axe = require('react-axe');\r\n    axe(React, ReactDOM, 1000);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}